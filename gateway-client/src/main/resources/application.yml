server:
  port: 8061
spring:
  application:
    name: gateway-client #作用等同于注释掉spring-boot-starter-web依赖
  main:
    web-application-type: reactive
  cloud:
    nacos:
      discovery:
        server-addr: ${spring.cloud.nacos.server-addr}
        username: nacos
        password: nacos
      server-addr: localhost:8850
    sentinel:
      eager: true
      enabled: true
      transport:
        port: 8719
        dashboard: localhost:8070
#        clientIp: 127.0.0.1
    gateway:
      discovery:
        locator:
          #如果开启这个,则可以直接通过微服务名进行路由,有接口暴露的风险
          #http://localhost:8061/microsv-b/microb/test1/V1
          enabled: false #开启自动路由功能，默认为false
      #这些都属于手动路由,自动跟手动只能生效一个
      routes:
#        - id: microsv-b
#          uri: lb://microsv-b
#          predicates:
#            - Path=/sv-b/**
#          filters:
#            - StripPrefix=1
        - id: microsv-a #路由Id，可以自己随意命名，只要保证id唯一即可
#          url: http://localhost:8064 #自动实现 - 转发到的具体地址
          uri: lb://microsv-a #手动实现 - 跳转服务地址，通过注册中心匹配服务，并实现负载均衡
          predicates: # 断言
            # 第一种，访问路径匹配，这是最基本的一种匹配方式，只要访问的路径能够匹配上，则进行路由转发
            - Path=/sv-a/** #配置谓词集合,多个用,分隔
#            - Method=POST #匹配get请求或者post请求 /p.s.试过可以使用 会过滤掉get请求
          filters:
            # 过滤转发地址前缀， 过滤1节
            # 如： 请求地址 - http://localhost:8061/sv-a/microa/test1/V1
            # 对应的谓词， 规则是 /sv-a，符合
            # 对应的uri是 lb://microsv-a  转换成 http://microsv-a 且包含负载均衡
            # 转发地址是： http://microsv-a/sv-a/microa/test1/V1
            # 过滤器是 过滤转发地址前缀， 过滤1节， 即删除 /sv-a -> http://microsv-a/microa/test1/V1
            - StripPrefix=1
#            RouteDefinitionRouteLocator.loadGatewayFilters会根据GatewayFilterFactory进行校验
#            大概有29种过滤器

#          predicates:
            # 第一种
#            - Path=/sv-a/**
            # 第二种，在指定时间之前访问才能通过，如果超出指定时间，则无法访问，值为具体的时间
            # 第三种，After代表在指定时间之后才能访问，使用方式和Before一样
            # 第四种，Between标识在指定时间段之内才能访问，开始时间与结束时间之间使用“,”分割
#            - Before=2022-08-04T20:20:40.675+08:00[Asia/Shanghai]
            # 第五种，Cookie匹配，他后面需要匹配两个参数，使用“,”分割，第一个参数cookie中的一个那么，第二个参数使用正则表达式，代表的是这个name对应的值应该满足的规则
            # 下面这个规则代表的意思是，cookie中字段name对应的值必须是字母
#            - Cookie=name,[a-z]+
            # 第六种，请求头匹配，它后面也是需要配置两个参数，使用“,”分割，第一个参数是请求头中一个字段名，第二个参数使用正则表达式，表示这个字段的值应该满足的规则
            # 下面这个规则代表的是，请求头中X-Request-Id的值为数字
#            - Header=X-Request-Id,\d+
            # 第七种，请求来源，限制调用改接口的host必须满足的要求
#            - Host=**.mashibing.com
            # 第八种，接口调用方式，允许配置多个，使用“,”分割，下面代表的GET/POST请求
#            - Method=POST #匹配get请求或者post请求
            # 第九种，请求参数的匹配，后面的值可以配置必须的参数名称和一个可选的该参数值的正则匹配规则
            #如果只配置一个参数，则代表请求参数中中必须要包含，配置两个参数，代表的是必须包含该参数，并且该参数的值必须符合对应的规则
#            - Query=id,*
            # 第十种，匹配指定的ip或者ip段
#            - RemoteAddr=127.0.0.1/24
            # 第十二种，根据http中中请求头中的X-Forwarded-For进行匹配
#            - XForwardedRemoteAddr=127.0.0.1/24
        # 第十一种，权重匹配，代表的80%的请求转发到https://www.high.com，20%的请求转发到https:///www.low.com
#        - id: weight_high
#          uri: https://www.high.com
#          predicates:
#            - Weight=group1, 8
#        - id: weight_low
#          uri: https:///www.low.com
#          predicates:
#            - Weight=group1, 2